digraph G {


#snakemake -s Snakefile_UMI.smk   --dag |tail -n+2 |dot -Tpng > dag.png
  subgraph cluster_0 {
    style=filled;
    color=lightgrey;
    node [style=filled,color=white];
    a0 -> a1 -> a2 -> a3;
    label = "process #1";
  }

  subgraph cluster_1 {
    node [style=filled];
    b0 -> b1 -> b2 -> b3;
    label = "process #2";
    color=blue
  }
  start -> a0;
  start -> b0;
  a1 -> b3;
  b2 -> a3;
  a3 -> a0;
  a3 -> end;
  b3 -> end;
  
 subgraph cluster_3 {
    node [style=filled];
    4, 3, 2;
    label = "pre-processing";
  }
  
  
   subgraph cluster_4 {
    node [style=filled];
    5, 1, 2 ,6;
    label = "mapping";
  }
  
  
    subgraph cluster_5 {
    node [style=filled];
    16, 15;
    label = "assembly";
  }
    subgraph cluster_6 {
    node [style=filled];
    11, 8, 10,12,9,13 ;
    label = "UMI correction";
  }
  
  
    subgraph cluster_7 {
    node [style=filled];
    18, 19,20,7;
    label = "UMI aware variant calling";
  }
  
    subgraph cluster_8 {
    node [style=filled];
    23 ;
    label = "removing duplicates";
  }
  
  
    subgraph cluster_9 {
    node [style=filled];
    22, 24,25;
    label = "UMI unaware variant calling";
  }
  
  
graph[bgcolor=white, margin=0];
node[shape=box, style=rounded, fontname=sans, fontsize=10, penwidth=2];
edge[penwidth=2, color=grey]; 
#0[label = "all", color = "0.25 0.6 0.85", style="rounded"];
4[label = "add_barcode\ns: 21014a009_01", color = "0.11 0.6 0.85", style="rounded"];
3[label = "trimming", color = "0.23 0.6 0.85", style="rounded"];
1[label = "mapping", color = "0.28 0.6 0.85", style="rounded"];
2[label = "kraken", color = "0.37 0.6 0.85", style="rounded"];
5[label = "index_reference", color = "0.41 0.6 0.85", style="rounded"];
6[label = "cov_depth_qc", color = "0.21 0.6 0.85", style="rounded"];
7[label = "ivar", color = "0.16 0.6 0.85", style="rounded"];
8[label = "sort_by_position_overlap", color = "0.53 0.6 0.85", style="rounded"];
9[label = "bamclipoverlap", color = "0.07 0.6 0.85", style="rounded"];
10[label = "sort_by_position_after_correction", color = "0.51 0.6 0.85", style="rounded"];
11[label = "barcode_correction", color = "0.39 0.6 0.85", style="rounded"];
12[label = "index_after_correction", color = "0.30 0.6 0.85", style="rounded"];
13[label = "index_overlap", color = "0.02 0.6 0.85", style="rounded"];
14[label = "consensus_ivar", color = "0.05 0.6 0.85", style="rounded"];
15[label = "quast", color = "0.32 0.6 0.85", style="rounded"];
16[label = "assembly", color = "0.62 0.6 0.85", style="rounded"];
17[label = "ivar_variant_table", color = "0.34 0.6 0.85", style="rounded"];
18[label = "umivar2", color = "0.44 0.6 0.85", style="rounded"];
19[label = "lofreq_call", color = "0.48 0.6 0.85", style="rounded"];
20[label = "varscan", color = "0.00 0.6 0.85", style="rounded"];
21[label = "ivar_variant_table_ignore", color = "0.64 0.6 0.85", style="rounded"];
22[label = "ivar_ignore", color = "0.09 0.6 0.85", style="rounded"];
23[label = "mapping_duplicate_samblaster", color = "0.57 0.6 0.85", style="rounded"];
24[label = "lofreq_call_ignore", color = "0.55 0.6 0.85", style="rounded"];
25[label = "varscan_ignore", color = "0.14 0.6 0.85", style="rounded"];
  
s="SampleID"
26[label="krakendb"]; # krakendb 
26 ->2
27[label="reference"];    # reference genome
27->5
28[label="Sample_{s}/{s}.viral.bam"]; # mapping
29[label="Sample_{s}/coverage/{s}.mosdepth.summary.txt"]; # coverage depth qc
/*    expand('Sample_{s}/ivar/{s}_ivar.vcf.gz', s = all_sampleids), # variant calling
    expand('Sample_{s}/consensus/{s}_consensus_ivar.fa', s = all_sampleids),  # consensus ivar
    #expand('Sample_{s}/consensus/{s}_umivar.fasta', s = all_sampleids),  # consensus umivar
    expand('Sample_{s}/quast_results', s = all_sampleids), # assembly 
    expand('Sample_{s}/ivar/{s}.variants.txt', s = all_sampleids), # variants.txt
    #expand('Sample_{s}/umivar2/{s}.viral_hq.vcf', s = all_sampleids), #umiVar2
    expand('Sample_{s}/umivar2/{s}_bamclipoverlap_sorted_hq.vcf', s = all_sampleids), #umiVar2
    expand('Sample_{s}/lofreq/{s}_lofreq.tsv', s = all_sampleids), # Lofreq
    expand('Sample_{s}/varscan/{s}_varscan.tsv', s = all_sampleids), # varscan
    expand('Sample_{s}/dedup/ivar/{s}.variants.txt', s = all_sampleids), # variants.txt
    expand('Sample_{s}/dedup/lofreq/{s}_lofreq.tsv', s = all_sampleids), # Lofreq
    expand('Sample_{s}/dedup/varscan/{s}_varscan.tsv', s = all_sampleids), # varscan
    expand('Sample_{s}/{s}_R1_trimmed.fastq.gz', s = all_sampleids)#want to check output  */
 
#  1 -> 0
#  6 -> 0
#  7 -> 0
#  14 -> 0
#  15 -> 0
#  17 -> 0
#  18 -> 0
#  19 -> 0
#  20 -> 0
#  21 -> 0
#  24 -> 0
#  25 -> 0
#  3 -> 0
  2 -> 1
  5 -> 1
  3 -> 2
  4 -> 3
  1 -> 6
  8 -> 7
  13 -> 7
  9 -> 8
  10 -> 9
  12 -> 9
  11 -> 10
  1 -> 11
  10 -> 12
  8 -> 13
  1 -> 14
  16 -> 15
  2 -> 16
  7 -> 17
  8 -> 18
  8 -> 19
  8 -> 20
  22 -> 21
  23 -> 22
  1 -> 23
  23 -> 24
  23 -> 25
  21 -> table;

  start [shape=Mdiamond];
  end [shape=Msquare];

  
  
}
